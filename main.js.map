{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-drum-kit';\r\n\r\n  onKeydown(event) {\r\n        const audioElements = document.querySelectorAll('audio');\r\n        \r\n        audioElements.forEach(audio => {\r\n          //   take the event keycode and see if it matches with any audio sound\r\n          if(audio.getAttribute('data-keyCode') === event.code) {\r\n            audio.play();\r\n            audio.currentTime = 0;\r\n          }\r\n        });\r\n\r\n        const keyElements = document.querySelectorAll('.key');\r\n        keyElements.forEach(key => {\r\n            if(key.getAttribute('data-keyCode') === event.code) {\r\n                key.classList.add('playing');\r\n                \r\n                // remove the animation when the key finishes transitioning from one CSS class to two (key + playing)\r\n                key.addEventListener('transitionend', () => {\r\n                    key.classList.remove('playing')\r\n                })\r\n            }\r\n        });\r\n  }\r\n\r\n}\r\n","<div class=\"page\" >\r\n\r\n    <div class=\"keys\" (document:keydown)=\"onKeydown($event)\">\r\n        <div class=\"key\" data-keyCode=\"KeyA\">\r\n            <kbd>A</kbd>\r\n            <span class=\"sound\">clap</span>\r\n        </div>\r\n        <div class=\"key\" data-keyCode=\"KeyS\">\r\n            <kbd>S</kbd>\r\n            <span class=\"sound\">hihat</span>\r\n        </div>\r\n        <div class=\"key\" data-keyCode=\"KeyD\">\r\n            <kbd>D</kbd>\r\n            <span class=\"sound\">kick</span>\r\n        </div>\r\n        <div class=\"key\" data-keyCode=\"KeyF\">\r\n            <kbd>F</kbd>\r\n            <span class=\"sound\">openhat</span>\r\n        </div>\r\n        <div class=\"key\" data-keyCode=\"KeyG\">\r\n            <kbd>G</kbd>\r\n            <span class=\"sound\">boom</span>\r\n        </div>\r\n        <div class=\"key\" data-keyCode=\"KeyH\">\r\n            <kbd>H</kbd>\r\n            <span class=\"sound\">ride</span>\r\n        </div>\r\n        <div class=\"key\" data-keyCode=\"KeyJ\">\r\n            <kbd>J</kbd>\r\n            <span class=\"sound\">snare</span>\r\n        </div>\r\n        <div class=\"key\" data-keyCode=\"KeyK\">\r\n            <kbd>K</kbd>\r\n            <span class=\"sound\">tom</span>\r\n        </div>\r\n        <div class=\"key\" data-keyCode=\"KeyL\">\r\n            <kbd>L</kbd>\r\n            <span class=\"sound\">tink</span>\r\n        </div>\r\n    </div>\r\n\r\n    <audio data-keyCode=\"KeyA\" src=\"../assets/sounds/clap.wav\"></audio>\r\n    <audio data-keyCode=\"KeyS\" src=\"../assets/sounds/hihat.wav\"></audio>\r\n    <audio data-keyCode=\"KeyD\" src=\"../assets/sounds/kick.wav\"></audio>\r\n    <audio data-keyCode=\"KeyF\" src=\"../assets/sounds/openhat.wav\"></audio>\r\n    <audio data-keyCode=\"KeyG\" src=\"../assets/sounds/boom.wav\"></audio>\r\n    <audio data-keyCode=\"KeyH\" src=\"../assets/sounds/ride.wav\"></audio>\r\n    <audio data-keyCode=\"KeyJ\" src=\"../assets/sounds/tom.wav\"></audio>\r\n    <audio data-keyCode=\"KeyK\" src=\"../assets/sounds/snare.wav\"></audio>\r\n    <audio data-keyCode=\"KeyL\" src=\"../assets/sounds/tink.wav\"></audio>\r\n  \r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}